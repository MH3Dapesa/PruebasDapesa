<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="sqlDataSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="customSqlQuery1.Sql" xml:space="preserve">
    <value>SELECT 
    PED.FECHA AS PED_FECHA,
    PED.FOLPED_FOLIO,
    PED.PED_NUMERO,
    PED.CLI_CLAVE,
    PED.RAZON_SOCIAL,
    PED.ART_CLAVE,
	0 VEND_CLAVE,   
    (SELECT A.DESCRIPCION FROM ARTICULOS A WHERE A.CLAVE = PED.ART_CLAVE) ART_DESCRIPCION,
    UPPER((SELECT P.OBSERVACIONES FROM PEDIDOS P WHERE P.NUMERO=PED.PED_NUMERO AND P.FOLPED_FOLIO=PED.FOLPED_FOLIO)) OBSERVACIONES,
    (
        SELECT 
        SUM(DP.CANTIDAD) 
        FROM DETALLES_PEDIDOS DP
        WHERE
        DP.PED_NUMERO = PED.PED_NUMERO
        AND  DP.PED_FOLPED_FOLIO = PED.FOLPED_FOLIO
        AND DP.ART_CLAVE = PED.ART_CLAVE
        GROUP BY DP.ART_CLAVE
    ) CANT_ART_PEDIDO,
    (
        SELECT 
        MAX(DP.PRECIO) 
        FROM DETALLES_PEDIDOS DP
        WHERE
        DP.PED_NUMERO = PED.PED_NUMERO
        AND  DP.PED_FOLPED_FOLIO = PED.FOLPED_FOLIO
        AND DP.ART_CLAVE = PED.ART_CLAVE
        GROUP BY DP.ART_CLAVE
    ) PRECIO_ART_PEDIDO,
    (
        SELECT 
        SUM(DP.CANTIDAD) 
        FROM DETALLES_PEDIDOS DP
        WHERE
        DP.PED_NUMERO = PED.PED_NUMERO
        AND  DP.PED_FOLPED_FOLIO = PED.FOLPED_FOLIO
        AND DP.ART_CLAVE = PED.ART_CLAVE
        GROUP BY DP.ART_CLAVE
    ) -  PED.CANT_ART_FALTANTE  CANT_ART_FACTURA,
    PED.CANT_ART_FALTANTE,
    ( 
      SELECT
          SUM(E.EXISTENCIA)
      FROM
          DETALLES_PEDIDOS D
      LEFT JOIN
          EXISTENCIAS_LOTE_ALMACEN E
      ON E.DET_LOTE_ART_CLAVE=D.ART_CLAVE
      WHERE
            D.PED_FOLPED_FOLIO = PED.FOLPED_FOLIO
          AND D.PED_NUMERO = PED.PED_NUMERO
          AND D.ART_CLAVE = PED.ART_CLAVE
          AND E.ALM_CLAVE IN (SELECT ALM.CLAVE FROM ALMACENES ALM, SUC_ALMACENES SUC WHERE ALM.CLAVE=SUC.ALM_CLAVE AND SUC.SUC_CLAVE=COALESCE(1,SUC.SUC_CLAVE) AND SUC.UTILIZAR='S' AND UPPER(ALM.IMPRESORA)='X')
      )+0 AS EXISTENCIA,
(SELECT DESCRIPCION FROM TIPOS_ARTICULOS TA WHERE ART.TI_ART_CLAVE = TA.CLAVE) CLASIFICACION
  FROM 
  (
    SELECT
        FOLPED_FOLIO,
        PED_NUMERO,
        ART_CLAVE,    
        CLI_CLAVE,
        RAZON_SOCIAL,
        FECHA,
        SUM(CANTIDAD) AS CANT_ART_FALTANTE
      FROM
      (
        SELECT 
          PE.FOLPED_FOLIO, 
          PE.NUMERO AS PED_NUMERO,  
          DP.ART_CLAVE,        
          PE.CLI_CLAVE,
          PE.RAZON_SOCIAL,
          PE.FECHA,
          DP.CANTIDAD
        FROM
          (
            SELECT 
              P.FOLPED_FOLIO, P.NUMERO, P.FECHA, C.CLI_CLAVE, C.RAZON_SOCIAL, C.CLI_STATUS 
            FROM 
              (
                SELECT
                  C.CLAVE AS CLI_CLAVE,
                  C.RAZON_SOCIAL,
                  C.STATUS AS CLI_STATUS,
                  SC.SUC_CLAVE
                FROM CLIENTES C, SUC_CLIENTES SC
                WHERE 
                  C.CLAVE = SC.CLI_CLAVE
                  AND C.CLAVE = COALESCE('7390',C.CLAVE)
                  AND C.VEND_CLAVE = COALESCE(NULL, C.VEND_CLAVE) --- SE AGREGO POR LO DE VENDEDOR
                  AND SC.SUC_CLAVE = 1 -- SIN SUCURSAL MUESTRA CLIENTES REPETIDOS SI LOS CLIENTES ESTAN ASIGNADOS A VARIAS SUCURSALES.
                --AND C.STATUS = 'A'  -- CON LA CONDICIÓN DE ESTATUS NO MUESTRA LOS CLIENTES REALES.
              ) C
              ,PEDIDOS P 
            WHERE 
              P.CLI_CLAVE = C.CLI_CLAVE
              AND P.STATUS_CAN = 'N'
              AND P.NUMERO = COALESCE(NULL,P.NUMERO)
              AND P.FOLPED_FOLIO = COALESCE(NULL,P.FOLPED_FOLIO)
              AND TRUNC(P.FECHA) BETWEEN TRUNC(TO_DATE('01/03/2016','DD/MM/YYYY')) AND TRUNC(TO_DATE('09/03/2016','DD/MM/YYYY'))
          ) PE,
          DETALLES_PEDIDOS DP
        WHERE
          PE.NUMERO = DP.PED_NUMERO
          AND PE.FOLPED_FOLIO = DP.PED_FOLPED_FOLIO
          AND DP.ART_CLAVE &lt;&gt; 'SEGURO'     
      UNION
      SELECT
      PED_FACT.FOLPED_FOLIO,
      PED_FACT.PED_NUMERO,
      DFE.ART_CLAVE,
      PED_FACT.CLI_CLAVE,
      PED_FACT.RAZON_SOCIAL,
      PED_FACT.FECHA,
      SUM(DFE.CANTIDAD)*-1 AS CANTIDAD
      FROM 
        (
          SELECT
             PE.FOLPED_FOLIO, 
             PE.NUMERO AS PED_NUMERO,
             FE.FOLFAC_FOLIO,
             FE.NUMERO AS FACT_EM_NUMERO,
             PE.CLI_CLAVE,
             PE.RAZON_SOCIAL,
             PE.FECHA
          FROM
              (
                SELECT 
                  P.FOLPED_FOLIO, P.NUMERO, P.FECHA, PFE.FACT_EM_FOLFAC_FOLIO, PFE.FACT_EM_NUMERO, C.CLI_CLAVE, C.RAZON_SOCIAL
                FROM 
                  (
                    SELECT
                      C.CLAVE AS CLI_CLAVE,
                      C.RAZON_SOCIAL,
                      C.STATUS AS CLI_STATUS,
                      SC.SUC_CLAVE
                    FROM CLIENTES C, SUC_CLIENTES SC
                    WHERE 
                      C.CLAVE = SC.CLI_CLAVE
                      AND C.CLAVE = COALESCE('7390',C.CLAVE)
                      AND C.VEND_CLAVE = COALESCE(NULL, C.VEND_CLAVE) --- SE AGREGO POR LO DE VENDEDOR
                      AND SC.SUC_CLAVE = 1 -- SIN SUCURSAL MUESTRA CLIENTES REPETIDOS SI LOS CLIENTES ESTAN ASIGNADOS A VARIAS SUCURSALES.
                    --AND C.STATUS = 'A'  -- CON LA CONDICIÓN DE ESTATUS NO MUESTRA LOS CLIENTES REALES.
                  ) C
                  ,PEDIDOS P , PEDIDOS_FACTURAS_EMI PFE
                WHERE 
                  P.CLI_CLAVE = C.CLI_CLAVE
                  AND PFE.PED_FOLPED_FOLIO = P.FOLPED_FOLIO
                  AND PFE.PED_NUMERO = P.NUMERO
                  AND P.STATUS_CAN = 'N'
                  AND P.NUMERO = COALESCE(NULL,P.NUMERO)
                  AND P.FOLPED_FOLIO = COALESCE(NULL,P.FOLPED_FOLIO)
                  AND TRUNC(P.FECHA) BETWEEN TRUNC(TO_DATE('01/03/2016','DD/MM/YYYY')) AND TRUNC(TO_DATE('09/03/2016','DD/MM/YYYY'))
              ) PE,
              FACTURAS_EMITIDAS FE
          WHERE 
            PE.FACT_EM_FOLFAC_FOLIO = FE.FOLFAC_FOLIO
            AND PE.FACT_EM_NUMERO = FE.NUMERO
            AND STATUS_CAN = 'N'
        ) PED_FACT,
        DETALLES_FACTURAS_EMITIDAS DFE
      WHERE 
        PED_FACT.FOLFAC_FOLIO = DFE.FACT_EM_FOLFAC_FOLIO
        AND PED_FACT.FACT_EM_NUMERO = DFE.FACT_EM_NUMERO
        AND DFE.ART_CLAVE &lt;&gt; 'SEGURO' 
        GROUP BY PED_FACT.FOLPED_FOLIO, PED_FACT.PED_NUMERO, DFE.ART_CLAVE, PED_FACT.CLI_CLAVE, PED_FACT.RAZON_SOCIAL, PED_FACT.FECHA
      ) 
      GROUP BY FOLPED_FOLIO, PED_NUMERO, ART_CLAVE, CLI_CLAVE, RAZON_SOCIAL, FECHA
      HAVING SUM(CANTIDAD) &gt; 0
  ) PED, ARTICULOS ART
  WHERE PED.ART_CLAVE = ART.CLAVE
  AND ART.CLAVE = COALESCE(NULL,ART.CLAVE)
  AND ART.LIN_ART_CLAVE = COALESCE(NULL,ART.LIN_ART_CLAVE)
  AND ART.MCA_CLAVE = COALESCE(NULL, ART.MCA_CLAVE)
  ORDER BY 1,2,3</value>
  </data>
  <data name="sqlDataSource1.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0ic3FsRGF0YVNvdXJjZTEiPjxWaWV3IE5hbWU9IlF1ZXJ5Ij48RmllbGQgTmFtZT0iUEVEX0ZFQ0hBIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iRk9MUEVEX0ZPTElPIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlBFRF9OVU1FUk8iIFR5cGU9IkludDY0IiAvPjxGaWVsZCBOYW1lPSJDTElfQ0xBVkUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iUkFaT05fU09DSUFMIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkFSVF9DTEFWRSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJWRU5EX0NMQVZFIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJBUlRfREVTQ1JJUENJT04iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iT0JTRVJWQUNJT05FUyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJDQU5UX0FSVF9QRURJRE8iIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlBSRUNJT19BUlRfUEVESURPIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJDQU5UX0FSVF9GQUNUVVJBIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJDQU5UX0FSVF9GQUxUQU5URSIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iRVhJU1RFTkNJQSIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iQ0xBU0lGSUNBQ0lPTiIgVHlwZT0iU3RyaW5nIiAvPjwvVmlldz48L0RhdGFTZXQ+</value>
  </data>
</root>